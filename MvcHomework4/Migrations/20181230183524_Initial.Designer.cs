// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcHomework4.Models;

namespace MvcHomework4.Migrations
{
    [DbContext(typeof(CRUD_DBContext))]
    [Migration("20181230183524_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MvcHomework4.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("BlogId");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("MvcHomework4.Models.Login", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("userId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("userName")
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.HasAlternateKey("UserName");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("MvcHomework4.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId");

                    b.Property<string>("Content");

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("MvcHomework4.Models.UserBlogMatch", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("recordId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnName("blogId");

                    b.Property<int>("UserId")
                        .HasColumnName("userId");

                    b.HasKey("RecordId");

                    b.HasIndex("BlogId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBlogMatch");
                });

            modelBuilder.Entity("MvcHomework4.Models.Post", b =>
                {
                    b.HasOne("MvcHomework4.Models.Blog", "Blog")
                        .WithMany("Post")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MvcHomework4.Models.UserBlogMatch", b =>
                {
                    b.HasOne("MvcHomework4.Models.Blog", "Blog")
                        .WithMany("UserBlogMatch")
                        .HasForeignKey("BlogId")
                        .HasConstraintName("FK_blogId");

                    b.HasOne("MvcHomework4.Models.Login", "User")
                        .WithMany("UserBlogMatch")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_userId");
                });
#pragma warning restore 612, 618
        }
    }
}
